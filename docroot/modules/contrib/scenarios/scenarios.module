<?php

/**
 * @file
 * Contains scenarios.module.
 */

/**
 * Implements hook_hook_info().
 */
function scenarios_hook_info() {
  $hooks = [
    'scenarios_info',
    'scenarios_info_alter',
    'scenarios_migration_finished',
    'scenarios_post_enable',
    'scenarios_post_uninstall',
    'scenarios_post_reset',
  ];

  return array_fill_keys($hooks, ['group' => 'scenarios']);
}

/**
 * Gets scenario information.
 *
 * @param $scenario
 *   (optional) The name of the scenario to retrieve migrations for.
 *
 * @return array
 *   An associative array of migration information.
 *
 * @see hook_scenario_import()
 * @see hook_scenario_import_alter()
 */
function scenarios_info($scenario = NULL) {
  $info = \Drupal::moduleHandler()->invokeAll('scenarios_info');
  \Drupal::moduleHandler()->alter('scenarios_info', $info);

  if (isset($scenario)) {
    return isset($info[$scenario]) ? $info[$scenario] : [];
  }
  else {
    return $info;
  }
}

/**
 * Uses scenariosHandler to enable a scenario
 * based on the installation profile name.
 *
 * See: drupal.org/node/2924549 | "Invoke hook after a site install is complete"
 *
 * @param $install_state
 */
function scenarios_site_install_finished($install_state) {
  if (isset($install_state['profile']) && $info = scenarios_info($install_state['profile'])) {
    \Drupal::service('scenarios_handler')->scenarioEnable($install_state['profile']);
  }
}

